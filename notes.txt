
MEMMAP
IROM 0x04000-0x23FFF
    Interrupt vector table 0x04000-0x04080
    Sub routine vector table 0x04080-0x040C0
BOOT 0x23000-0x23FFF
IRAM 0x00000-0x017FF (6KB)
MIRROR 0xF0000-0xF17FF
SFRA 0x03000-0x03F00
CPUCTL 0x03F00-0x3FFF

"C:\Program Files (x86)\Panasonic\DebugFactory Builder\MN101\BuiltInCC\1_7R1\CC101E\UTIL\EXDUMP.EXE" -d -oSample_EF31G_SK_mod.lst Sample_EF31G_SK_mod.ex

SC1 packets:
00: 0xF0
01: 0xF1
02: size < 0x23 ; max 0x2F
03: LOW(seq_no)
04: HIGH(seq_no)
05: 0/1, 2-for reply from MCU?

rx2_to_tx1_echo header:
00: F0
01: F1
02: 08 tx_size
03: 00
04: 00
05: 02
06: F0

send_packet_buffer:
00: F0
01: F1
02: data_size (max 0x2F)
03: send_packet_buffer_seq & 0xFF (word_906)
04: (send_packet_buffer_seq >> 8) & 0xFF
05: 01 ; should be 1 for received from AP
<data>
xx: <crc>

<data>:
  +00: <header>:
    00 - POWER +01:
      0 - nop
      2 - <>
      4 - <>
      A - +02: <arg0>
     11 - <>
     13 - <>
     15 - <>
     16 - <>
    01 - VERSION +01: <arg0>
      2 - get_mcu_version <>
      3 - REPLY get_mcu_version
      8 - version_update_mcu_cmd <>
      9 - R version_update_mcu_cmd <0>
            High to P6OUT2
            
    03 - +01:
      0,2,8 - nop
      4 - +02: <arg0>
      6 - <>
    04 - +01:
      0 - +02: <arg0> +03: <arg1>
      2 - +02: <arg0>
      4 - +02: <arg0>
      6 - <>
      8 - +02: <arg0>
      A - <>
      C - +02: <arg0> +03: <arg1>
      E - +02: <arg0>
     10 - +02: <arg0>
     12 - +02: <arg0>
     14 - +02: <arg0> +03: <arg1>
    05 - +01:
      0 - +02: <arg0>
      2 - <>
      4 - <>
      6 - <>
      8 - <>
      A - <>
      C - +02: <arg0>
      E - +02: <arg0>
     10 - <>
     12 - +02: <arg0>
     14 - +02: <arg0>
     16 - +02: <arg0>
     18 - +02: <arg0>
     1A - +02: <arg0>
     1C - +02: <arg0>
     23 - +02: <arg0>
     27 - <>
     29 - <>
     2B - <>
     2D - <>
     2F - +02: <arg0>
     31 - <>
    07 - +01:
      2 - +02: <arg0>
    FF - +01:
      0 - +02: <nop> +03: <nop> +04: <nop> +05: <arg0>
      2 - +02: <arg0>
      4 - <>
      6 - +02: <arg0>
      8 - <>
     10 - +02: <arg0>
     14 - <>
     16 - +02: <arg0>
     17 - +02: <arg0>
     18 - <>
     1A - +02: <arg0>
     1C - +02: <arg0>
     1E - +02: <arg0>
     1F - +02: <arg0>
     20 - +02: <arg0> +03: <arg1>
    06 - +01:
      0 - +02: <arg0>
      2 - <>
      4 - +02: <arg0>
      6 - <>
      A - <>
      C - +02: <arg0>
      E - +02: <arg0>
     10 - +02: <arg0> +03: <arg1>
     12 - +02: <arg0> +03: <arg1>
     14 - +02: <arg0>
    08 - +01:
      1 - <>
    09 - +01:
      1 - <>
    0A - +01:
      1 - <>
    0B - +01:
      1 - <>
      3 - <>
    0C - +01:
      0 - +02: <arg0>
      2 - <>
      4 - +02: <arg0>
    0D - +01:
      0 - +02: <arg0>
    E0 - +01:
      0 - <>
      2 - <>
    F0 - +01: word<arg0>

set_volume(char type, char value)
  data = [byte(0), byte(type), byte(value)]
  send_cmd(cmd=4, payload=data, datasize=3);
    //Format frame
    send_frame(const void *data, size_t size)
        write(sfd, data, size)
        
upd_frame:
+00: 0xFE magic
+01: cmd
    0x60 - reply: loader started <0,0>
    0x42 - erase, data[16] - 128 bit security key, hesi_mcu header
           reply: <key result, erase result>
             key results:
                0xEE - key check failed
                0xAA - key accepted
                0x55 - unsecured
             erase results = Erase_Lib return code
    
    0x41 - program
        +00: (big endian word) index of 0x40 byte blocks from offset 0x4000
        +02:
        
+02: datalen (max 3 for MCU>AP, max 70 for AP>MCU)
+03: data[0~70]
+0x: checksum (sum all but magic)

